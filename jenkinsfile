pipeline {
    agent any

    tools {
        maven 'Maven'  // Ensure Maven is installed in Jenkins
    }

    environment {
        IMAGE_NAME = "eureka-server"
        CONTAINER_NAME = "eureka-server-container"
        SONARQUBE_URL = "http://13.230.171.203:9000"  // Ensure the URL has "http://"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sreekanth13121998/eureka.git'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {  // Ensure this matches Jenkins SonarQube configuration
                    withCredentials([string(credentialsId: 'jenkins', variable: 'SONARQUBE_TOKEN')]) {
                        sh '''
                        mvn org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar \
                            -Dsonar.projectKey=eureka \
                            -Dsonar.host.url=$SONARQUBE_URL \
                            -Dsonar.login=$SONARQUBE_TOKEN
                        '''
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh '''
                    docker stop $CONTAINER_NAME || true
                    docker rm $CONTAINER_NAME || true
                    docker run -d --name $CONTAINER_NAME -p 8761:8761 $IMAGE_NAME
                    '''
                }
            }
        }

        stage('Clean Up Old Docker Images') {
            steps {
                sh 'docker image prune -f'
            }
        }
    }

    post {
        success {
            echo '✅ Build and SonarQube Analysis completed successfully!'
        }
        failure {
            echo '❌ Build or SonarQube Analysis failed! Please check logs.'
        }
    }
}
